In designing this problem, my original idea was to create a hard link. Using that hard link 
I would then delete the file provided but still have a hard link to it therefore saving the file. 
I began to think a little harder though and decided that this solution was unworkable for one simple reason. 
This simply doesnt work across partitions. additionally, hard links simply don't work for directories. 

Therefore I put two systems under consideration: A symbolic link and hiding trash system or an mv based trashed system. 
I decided on the mv based trash system because it makes reopening access to a file considerably easier and restoring its original location is considerably easier. 

So, truthfully, I got told that I did not read the instructions in a very harsh way. 
After describing my base64 encoding as a way to run the code to my friend Dillon (also in the class), he stared at me confused. 
"We don't need to follow the path back" he said. "EGADS!", said I (granted I used a different exclamation that may not be the most appropriate)
I had overengineered something I had already completed. Because I had not read the instructions. That's on me but...dammit. Oh well. 
Now my solution works in such a way that you only get to srm and unrm from the same path. The file / directory is restored to exactly where it came from. 
Did that simple change take me an extra 2 - 3 hours to implement in all my googling of how to save path information etc? Yes. 
Does it now work in a way that is kinda cool? Also yes. If need be I will also provide a solution that is much more simple 
(all the logic is already implemented, a few lines would just neeed to be deleted / moved around)

How this system works: 


srm

encode a file name in base64 (this took some googling to figure out ngl) and change the file name to that base64 encoding
mv that encoded file path into the trash can

unrm

encode the requested to see if it exists in the bin first
if it exists then transfer that file over to the requested directory
rename it back to the decoded base64

lsrm

run ls -l on all files (including directories) in trash but don't operate on the last argument of -l (the name) 
replace that with the decoded using printf, continue on with your life 

durm

works much the same way as lsrm

trash

the easiest of them all
/bin/rm -rf $TRASH
oh why can't all functions be this easy
